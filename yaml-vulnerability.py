import atheris
import sys
import yaml

def vulnerable_yaml_parser(data):
    try:
        # Parse YAML data (may raise YAMLError, ValueError, TypeError)
        parsed_data = yaml.safe_load(data)
        # Example of checking for an expected behavior (here just printing parsed data for example)
        # if parsed_data:
        #     print(parsed_data)
    except yaml.YAMLError as e:
        # Expected exception, handled silently
        pass
    except ValueError as e:
        # Unexpected exception, report it
        print(f"Unexpected ValueError: {e}")
    except TypeError as e:
        # Unexpected exception, report it
        print(f"Unexpected TypeError: {e}")
    except Exception as e:
        # Catch any other unexpected exceptions
        print(f"Unexpected exception: {e}")

def test_yaml_input(data):
    fdp = atheris.FuzzedDataProvider(data)
    fuzz_input = fdp.ConsumeUnicodeNoSurrogates(100)  # Fuzz data up to 100 characters
    vulnerable_yaml_parser(fuzz_input)

if __name__ == "__main__":
    atheris.Setup(sys.argv, test_yaml_input)
    atheris.Fuzz()
