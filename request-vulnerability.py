import atheris
import sys
import requests

def fetch_url(url):
    try:
        # This function fetches a URL using requests.get
        response = requests.get(url)
        # print(f"URL fetched successfully: {url}, Status code: {response.status_code}")
    except requests.exceptions.MissingSchema as e:
        # This exception occurs when the URL lacks a scheme (e.g., http:// or https://)
        print(f"MissingSchema error with URL: {url}")
    except requests.exceptions.RequestException as e:
        # Catch other types of requests-related exceptions
        print(f"RequestException with URL: {url}, Error: {e}")

def test_url_input(data):
    fdp = atheris.FuzzedDataProvider(data)
    fuzz_input = fdp.ConsumeUnicodeNoSurrogates(100)  # Consume up to 100 characters of fuzzed input
    fetch_url(fuzz_input)  # Pass fuzzed URL to fetch_url function

if __name__ == "__main__":
    atheris.Setup(sys.argv, test_url_input)
    atheris.Fuzz()
